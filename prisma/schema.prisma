// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling : change to POSTGRES_URL
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  username      String?
  profilePic    String?
  password      String
  salt          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
  conversations Chat[]
  Message       Message[]
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Chat {
  id        String    @id @default(cuid())
  convoName String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  users     User[]
}

model Message {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  text      String
  picture   String?
  status    MessageStatus @default(SENT)
  chat      Chat?         @relation(fields: [chatId], references: [id])
  chatId    String?
  sender    User?         @relation(fields: [senderId], references: [id])
  senderId  String?
}

model SocketMessage {
  id      String @id @default(cuid())
  toId    String
  itemId  String
  message String
}

enum MessageStatus {
  SENT
  DELIVERED
  SEEN
}
